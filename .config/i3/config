# Author: Vinicius M Longaray
# Mail: vmouralongaray@gmail.com
# Github: @v1nns
#
# Fast and furious! (Rice, Rice, Rice)
#

# win-key is the chosen one as key to win! *ba dum tss*
set $mod Mod4

# Font for window titles. Just be careful, polybar uses a different font.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# ============================== AUDIO BINDINGS ===============================

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Audio related key bindings (currently using MPD)
bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id snu -v +2
bindsym $mod+XF86AudioLowerVolume exec --no-startup-id snu -v -2
bindsym XF86AudioPlay exec --no-startup-id mpc toggle
bindsym XF86AudioStop exec --no-startup-id mpc stop
bindsym XF86AudioPrev exec --no-startup-id mpc prev
bindsym XF86AudioNext exec --no-startup-id mpc next

# ========================== WORKSPACE DEFINITIONS ============================

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# Workspaces for monitor 1
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
# you can ignore this "camera" string
set $ws10 "10:camera"

# Workspaces for monitor 2
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"

# Bind workspaces to only one monitor
workspace $ws1 output DP-2
workspace $ws2 output DP-2
workspace $ws3 output DP-2
workspace $ws4 output DP-2
workspace $ws5 output DP-2
workspace $ws6 output DP-2
workspace $ws7 output DP-2
workspace $ws8 output DP-2
workspace $ws9 output DP-2
workspace $ws10 output DP-2

workspace $ws11 output DP-0
workspace $ws12 output DP-0
workspace $ws13 output DP-0
workspace $ws14 output DP-0
workspace $ws15 output DP-0
workspace $ws16 output DP-0
workspace $ws17 output DP-0
workspace $ws18 output DP-0
workspace $ws19 output DP-0
workspace $ws20 output DP-0

# switch to workspace in monitor 1
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# switch to workspace in monitor 2
bindsym $mod+Control+1 workspace number $ws11
bindsym $mod+Control+2 workspace number $ws12
bindsym $mod+Control+3 workspace number $ws13
bindsym $mod+Control+4 workspace number $ws14
bindsym $mod+Control+5 workspace number $ws15
bindsym $mod+Control+6 workspace number $ws16
bindsym $mod+Control+7 workspace number $ws17
bindsym $mod+Control+8 workspace number $ws18
bindsym $mod+Control+9 workspace number $ws19
bindsym $mod+Control+0 workspace number $ws20

# move any window container to specific workspace in monitor 1
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move any window container to specific workspace in monitor 2
bindsym $mod+Control+Shift+1 move container to workspace number $ws11
bindsym $mod+Control+Shift+2 move container to workspace number $ws12
bindsym $mod+Control+Shift+3 move container to workspace number $ws13
bindsym $mod+Control+Shift+4 move container to workspace number $ws14
bindsym $mod+Control+Shift+5 move container to workspace number $ws15
bindsym $mod+Control+Shift+6 move container to workspace number $ws16
bindsym $mod+Control+Shift+7 move container to workspace number $ws17
bindsym $mod+Control+Shift+8 move container to workspace number $ws18
bindsym $mod+Control+Shift+9 move container to workspace number $ws19
bindsym $mod+Control+Shift+0 move container to workspace number $ws20

# ============================ WORKSPACE-RELATED ==============================

# as the name says (i3-gaps), I'm using smart_gaps with a custom margin
smart_gaps on
gaps inner 7
#gaps outer 10
for_window [class="^.*"] border pixel 2

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# move to next workspace
bindsym $mod+Control+Left workspace prev_on_output
bindsym $mod+Control+Right workspace next_on_output

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# TODO: create script/rofi to change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
# bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym j resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym l resize shrink height 10 px or 10 ppt
    bindsym semicolon resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

# resize active container
bindsym $mod+r mode "resize"

# =============================== I3 KEYBINDS =================================

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# ============================== KEY BINDINGS =================================

#i nteractive screenshot by pressing printscreen
bindsym Print exec --no-startup-id gnome-screenshot -i

# crop-area screenshot by pressing Mod + printscreen
bindsym $mod+Print exec --no-startup-id "maim -s --format=png /dev/stdout | xclip -selection clipboard -t image/png -i"

# rename current workspace
bindsym $mod+u exec --no-startup-id rename-workspace.sh

# create new workspace
bindsym $mod+Control+t exec --no-startup-id new-workspace.py --create

# move container to new workspace
bindsym $mod+Shift+t exec --no-startup-id new-workspace.py --move

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q [con_id="__focused__" title="^(?!dropdown-terminal).*$"] kill

# list all windows opened and choose which one you want to switch to
bindsym $mod+Tab exec --no-startup-id switch-window.sh

# start custom-themed rofi (a program launcher)
bindsym $mod+d exec --no-startup-id launcher.sh

# open explorer
bindsym $mod+e exec --no-startup-id nautilus

# lock window
bindsym $mod+Control+l exec i3lock -c 000000

# work mode
bindsym $mod+w exec --no-startup-id work-mode.sh

# =========================== STARTUP APPLICATIONS ============================

# Combination of xss-lock, nm-applet and pactl is a popular choice, and I liked,
# so they are included here.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# scroll velocity
exec --no-startup-id imwheel -b "4 5"

# start compositor
exec --no-startup-id picom -CGb

# Alright, there are two things I gotta tell you, these are:
# - restarting pulseaudio like this, is the easiest way to run pulseaudio along
#   with user and start its tcp server in order to Mopidy connect and play;
# - I've added a few commands in /etc/pulse/default.pa (set-default-sink,
#   set-default-source and set-source-volume)
# - Actually, I enabled mopidy.service to run along with user instead of
#   system

# start pasystray
exec --no-startup-id "pkill pasystray; pasystray &"

# start polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# before running this command, must run NVIDIA X Server Settings to create a
# configuration file (~/.nvidia-settings-rc)
exec_always --no-startup-id /usr/bin/nvidia-settings --load-config-only

# enable NUMLOCK on startup
exec_always --no-startup-id numlockx &

# setup wallpaper
#exec_always --no-startup-id feh --bg-scale $HOME/Pictures/Wallpapers/pixelnaut.png
exec_always --no-startup-id nitrogen --restore

# run monitor to save any notification message sent through DBus
exec_always --no-startup-id monitor-notification.py &> /dev/null

# set default keyboard layout (PT-BR)
exec "setxkbmap -model abnt2 -layout br"

# ================================= CUSTOM ====================================

# floating terminal using terminator
for_window [class="Terminator" title="dropdown-terminal"] sticky enable border none
for_window [class="Terminator" title="dropdown-terminal"] move scratchpad
exec --no-startup-id terminator -T dropdown-terminal --command='zsh -o ignoreeof'
bindsym $mod+t [class="Terminator" title="dropdown-terminal"] scratchpad show

# created as popup on click from module in polybar
for_window [class="Yad" title="yad-calendar"] floating enable

# volume control
for_window [class="Pavucontrol"] floating enable, resize set 800px 600px, move position center

# configure popups from google-chrome as floating
for_window [class="Google-chrome" window_role="pop-up"] floating enable

# if you use chrome as default browser and it is not autocompleting any saved
# password, check if gnome-keyring-daemon is running, if not, add this:
#  exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=secrets
# also, must add this argument to chrome.desktop:
#  --password-store=gnome
